---
- name: Create InfluxDB and Telegraf Directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ influxdb_data_directory }}"
    - "{{ telegraf_data_directory }}"

- name: Create Grafana Directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "472"
    recurse: yes
  with_items:
    - "{{ grafana_data_directory }}"
    - "{{ grafana_data_directory }}/data"
    - "{{ grafana_data_directory }}/config/"
    - "{{ grafana_data_directory }}/config/provisioning"
    - "{{ grafana_data_directory }}/config/provisioning/datasources"

- name: Template telegraf.conf
  template:
    src: telegraf/telegraf.conf
    dest: "{{ telegraf_data_directory }}/telegraf.conf"

- name: Template Grafana data source
  template:
    src: grafana/provisioning/datasources/ansible-nas.yml
    dest: "{{ grafana_data_directory }}/config/provisioning/datasources/ansible-nas.yml"

- name: Grafana Docker Stack
  docker_stack:
    state: present
    name: grafana
    compose:
    -   version: '3'
        services:
          grafana:
            image: grafana/grafana
            ports:
              - "3000:3000"
            volumes:
              - "{{ grafana_data_directory }}/data:/var/lib/grafana:rw"
              - "{{ grafana_data_directory }}/config/provisioning:/etc/grafana/provisioning:ro"
            labels:
              traefik.backend: "grafana"
              traefik.frontend.rule: "Host:grafana.{{ ansible_nas_domain }}"
              traefik.enable: "true"
              traefik.port: "3000"
            deploy:
              restart_policy:
                condition: on-failure
              resources:
                limits:
                  memory: "1g"
          telegraf:
            image: telegraf
            volumes:
              - "{{ telegraf_data_directory }}/telegraf.conf:/etc/telegraf/telegraf.conf:ro"
              - "/var/run/docker.sock:/var/run/docker.sock:ro"
            restart: unless-stopped
            deploy:
              resources:
                limits:
                  memory: "1g"
          influxdb:
            image: influxdb
            ports:
              - "8086:8086"
            volumes:
              - "{{ influxdb_data_directory }}:/var/lib/influxdb:rw"
            deploy:
              restart_policy:
                condition: on-failure
              resources:
                limits:
                  memory: "1g"