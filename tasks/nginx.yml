---
- name: Create Nginx Directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ nginx_data_directory }}"
    - "{{ nginx_data_directory }}/certs"
    - "{{ nginx_data_directory }}/html"
    - "{{ nginx_data_directory }}/vhost.d"

- name: Nginx Docker Container
  docker_stack:
    state: present
    name: nginx
    compose:
    -   version: '3'
        services:
          nginx:
            image: jwilder/nginx-proxy
            ports:
              - "80:80"
              - "443:443"
            volumes:
              - "{{ nginx_data_directory }}/certs:/etc/nginx/certs:ro"
              - "{{ nginx_data_directory }}/vhost.d:/etc/nginx/vhost.d:rw"
              - "{{ nginx_data_directory }}/html:/usr/share/nginx/html:rw"
              - "/var/run/docker.sock:/tmp/docker.sock:ro"
            labels:
              traefik.backend: "miniflux"
              traefik.frontend.rule: "Host:nextcloud.{{ ansible_nas_domain }}"
              traefik.enable: "true"
              traefik.port: "80"
            deploy:
              restart_policy:
                condition: on-failure
              resources:
                limits:
                  memory: "1g"
          letsencrypt:
            image: jrcs/letsencrypt-nginx-proxy-companion
            volumes:
              - "{{ nginx_data_directory }}/certs:/etc/nginx/certs:ro"
              - "{{ nginx_data_directory }}/vhost.d:/etc/nginx/vhost.d:rw"
              - "{{ nginx_data_directory }}/html:/usr/share/nginx/html:rw"
              - "/var/run/docker.sock:/tmp/docker.sock:ro"
            # volumes_from: nginx-proxy
            deploy:
              restart_policy:
                condition: on-failure
              resources:
                limits:
                  memory: "1g"